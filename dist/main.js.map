{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/platforms.js","webpack:///./src/index.js","webpack:///./src/intro.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Platforms","canvas","context","width","height","this","platforms","Map","x","y","platform","set","fillStyle","fillRect","document","getElementById","getContext","gameStarted","keys","player","speed","velX","velY","color","jumping","grounded","jumpStrength","draw","collisionCheck","character","vectorX","vectorY","halfWidths","halfHeights","collisionDirection","Math","abs","offsetX","offsetY","loop","length","draw_platforms","direction","clearCanvas","clearRect","push","body","addEventListener","event","keyCode","setInterval","font","textAlign","fillText","intro_screen"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export default class Platforms {\n  constructor(canvas, context, width, height) {\n    this.height = height;\n    this.width = width;\n    this.context = context;\n    this.canvas = canvas;\n    this.platforms = new Map();\n  }\n  define(name, x, y) {\n    let platform = {\n      x: this.canvas.width - x,\n      y: this.canvas.height - y,\n      width: this.width,\n      height: this.height\n    };\n    this.platforms.set(name, platform);\n  }\n  draw_platforms(name) {\n    this.context.fillStyle = \"blue\";\n    let platform = this.platforms.get(name);\n    this.context.fillRect(\n      platform.x,\n      platform.y,\n      platform.width,\n      platform.height\n    );\n  }\n}\n","import \"./styles/index.scss\";\nimport { intro_screen } from './intro';\nimport Platforms from './platforms';\n\nvar canvas = document.getElementById(\"game\");\nvar context = canvas.getContext(\"2d\");\nvar platforms = new Platforms(canvas,context,120,10)\nvar gameStarted = false;\nvar keys = [];\nvar friction = 0.8;\nvar gravity = 0.98;\n\nvar player = {\n  x: 5,\n  y: canvas.height - 20,\n  width: 20,\n  height: 20,\n  speed: 5,\n  velX: 0,\n  velY: 0,\n  color: \"#ff0000\",\n  jumping: false,\n  grounded: false,\n  jumpStrength: 7,\n  draw: function() {\n    context.fillStyle = this.color;\n    context.fillRect(this.x, this.y, this.width, this.height);\n  }\n};\n\nfunction collisionCheck(character, platform) {\n  var vectorX =\n    character.x + character.width / 2 - (platform.x + platform.width / 2);\n  var vectorY =\n    character.y + character.height / 2 - (platform.y + platform.height / 2);\n\n  var halfWidths = character.width / 2 + platform.width / 2;\n  var halfHeights = character.height / 2 + platform.height / 2;\n\n  var collisionDirection = null;\n\n  if (Math.abs(vectorX) < halfWidths && Math.abs(vectorY) < halfHeights) {\n    var offsetX = halfWidths - Math.abs(vectorX);\n    var offsetY = halfHeights - Math.abs(vectorY);\n    if (offsetX < offsetY) {\n      if (vectorX > 0) {\n        collisionDirection = \"left\";\n        character.x += offsetX;\n      } else {\n        collisionDirection = \"right\";\n        character.x -= offsetX;\n      }\n    } else {\n      if (vectorY > 0) {\n        collisionDirection = \"top\";\n        character.y += offsetY;\n      } else {\n        collisionDirection = \"bottom\";\n        character.y -= offsetY;\n      }\n    }\n  }\n\n  return collisionDirection;\n}\n/////////////////IWANTTODELETE///////////////////////\n\n\nvar platforms = [];\nvar platform_width = 120;\nvar platform_height = 10;\n\nplatforms.push({\n  x: canvas.width - 170,\n  y: 40,\n  width: platform_width,\n  height: platform_height\n});\nplatforms.push({\n  x: canvas.width - 170,\n  y: canvas.height - 50,\n  width: platform_width,\n  height: platform_height\n});\nplatforms.push({\n  x: canvas.width - 380,\n  y: canvas.height - 120,\n  width: platform_width,\n  height: platform_height\n});\nplatforms.push({\n  x: canvas.width - 380,\n  y: canvas.height - 240,\n  width: platform_width,\n  height: platform_height\n});\n\nplatforms.push({\n  x: canvas.width - 590,\n  y: canvas.height - 180,\n  width: platform_width,\n  height: platform_height\n});\nplatforms.push({\n  x: 0,\n  y: canvas.height - 5,\n  width: canvas.width,\n  height: platform_height\n});\n\nfunction draw_platforms() {\n  context.fillStyle = \"#333333\";\n\n  for (var i = 0; i < platforms.length; i++) {\n    context.fillRect(\n      platforms[i].x,\n      platforms[i].y,\n      platforms[i].width,\n      platforms[i].height\n    );\n  }\n}\n\n\n///////////////////////////////////////////////////\n\n\n\n\n\n\nfunction loop() {\n  draw_platforms();\n  player.draw();\n\n  if (keys[38] || keys[32]) {\n    if (!player.jumping) {\n      player.velY = -player.jumpStrength * 2;\n      player.jumping = true;\n    }\n  }\n\n  if (keys[39]) {\n    if (player.velX < player.speed) {\n      player.velX++;\n    }\n  }\n\n  if (keys[37]) {\n    if (player.velX > -player.speed) {\n      player.velX--;\n    }\n  }\n\n  player.x += player.velX;\n  player.y += player.velY;\n\n  player.velX *= friction;\n  player.velY += gravity;\n\n  player.grounded = false;\n  for (var i = 0; i < platforms.length; i++) {\n    var direction = collisionCheck(player, platforms[i]);\n\n    if (direction == \"left\" || direction == \"right\") {\n      player.velX = 0;\n    } else if (direction == \"bottom\") {\n      player.jumping = false;\n      player.grounded = true;\n    } else if (direction == \"top\") {\n      player.velY *= -1;\n    }\n  }\n\n  if (player.grounded) {\n    player.velY = 0;\n  }\n}\n\n\n\n\n\nfunction startGame() {\n  gameStarted = true;\n  clearCanvas();\n\n  setInterval(function() {\n    clearCanvas();\n    loop();\n  }, 1000 / 30);\n}\nfunction clearCanvas() {\n  context.clearRect(0, 0, canvas.width, canvas.height);\n}\n\ndocument.body.addEventListener(\"keydown\", function(event) {\n  if (event.keyCode == 13 && !gameStarted) {\n    startGame();\n  }\n  keys[event.keyCode] = true;\n});\n\ndocument.body.addEventListener(\"keyup\", function(event) {\n  keys[event.keyCode] = false;\n});\n\nintro_screen(canvas, context);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const canvas = document.getElementById(\"myCanvas\");\n// const context = canvas.getContext(\"2d\");\n\n// const DURATION_IDLE = 200;\n// const DURATION_JUMPING = 100;\n// const DURATION_RUNNING = 200;\n\n// const IDLE_MONKEY_PATH = \"/src/img/idle\";\n// const JUMPING_MONKEY_PATH = \"/src/img/jumping\";\n// const RUNNING_MONKEY_PATH = \"/src/img/running\";\n\n// const NUMBER_OF_IDLE_IMAGES = 17;\n// const NUMBER_OF_JUMPING_IMAGES = 4;\n// const NUMBER_OF_RUNNING_IMAGES = 13;\n\n// // const TIME_PER_IDLE_FRAME = DURATION_IDLE / NUMBER_OF_IDLE_IMAGES;\n// // const TIME_PER_JUMPING_FRAME = DURATION_JUMPING / NUMBER_OF_JUMPING_IMAGES;\n// // const TIME_PER_RUNNING_FRAME = DURATION_RUNNING / NUMBER_OF_RUNNING_IMAGES;\n\n// var timeWhenLastUpdate;\n// var timeFromLastUpdate;\n// var frameNumberIdle = 0;\n// var frameNumberJumping = 0;\n// var frameNumberRunning = 0;\n// var key_state;\n\n// var monkey = {\n//   image: new Image(),\n//   isIdle: true,\n//   jumping: false,\n//   running: false,\n//   width: 100,\n//   height: 100,\n//   x_velocity: 0,\n//   y_velocity: 0,\n//   x: 100,\n//   y: 0\n// };\n\n// const controller = {\n//   left: false,\n//   right: false,\n//   up: false,\n//   keyListener: function(event) {\n//     key_state = event.type == \"keydown\" ? true : false;\n\n//     switch (event.keyCode) {\n//       case 37: // left key\n//         controller.left = key_state;\n//         break;\n//       case 38: // up key\n//         controller.up = key_state;\n//         break;\n//       case 39: // right key\n//         controller.right = key_state;\n//         break;\n//     }\n//   }\n// };\n\n// function step(startTime) {\n//   const backgroundImage = new Image();\n//   backgroundImage.src = \"/src/img/background/background_1.png\";\n//   context.drawImage(backgroundImage, 0, 0, canvas.width, canvas.height);\n//   renderLevel(monkey);\n\n//   if (monkey.isIdle) {\n//     if (!timeWhenLastUpdate) {\n//       timeWhenLastUpdate = startTime;\n//     }\n//     timeFromLastUpdate = startTime - timeWhenLastUpdate;\n//     // if (timeFromLastUpdate > TIME_PER_IDLE_FRAME) {\n//     monkey.image.src = IDLE_MONKEY_PATH + \"/idle_\" + frameNumberIdle + \".png\";\n//     context.drawImage(\n//       monkey.image,\n//       monkey.x,\n//       monkey.y,\n//       monkey.width,\n//       monkey.height\n//     );\n\n//     timeWhenLastUpdate = startTime;\n//     if (frameNumberIdle >= NUMBER_OF_IDLE_IMAGES) {\n//       frameNumberIdle = 0;\n//     } else {\n//       frameNumberIdle++;\n//     }\n//     // }\n//   }\n//   if (monkey.jumping) {\n//     if (!timeWhenLastUpdate) {\n//       timeWhenLastUpdate = startTime;\n//     }\n//     timeFromLastUpdate = startTime - timeWhenLastUpdate;\n//     //   if (timeFromLastUpdate > TIME_PER_JUMPING_FRAME) {\n//     monkey.image.src =\n//       JUMPING_MONKEY_PATH + \"/jumping_\" + frameNumberJumping + \".png\";\n//     context.drawImage(\n//       monkey.image,\n//       monkey.x,\n//       monkey.y,\n//       monkey.width,\n//       monkey.height,\n//     );\n\n//     timeWhenLastUpdate = startTime;\n//     if (frameNumberJumping >= NUMBER_OF_JUMPING_IMAGES) {\n//       frameNumberJumping = 0;\n//     } else {\n//       frameNumberJumping++;\n//     }\n//     //   }\n//   }\n\n//   if (monkey.running) {\n//     if (!timeWhenLastUpdate) {\n//       timeWhenLastUpdate = startTime;\n//     }\n//     timeFromLastUpdate = startTime - timeWhenLastUpdate;\n//     //   if (timeFromLastUpdate > TIME_PER_RUNNING_FRAME) {\n//     monkey.image.src =\n//       RUNNING_MONKEY_PATH + \"/running_\" + frameNumberRunning + \".png\";\n//     context.drawImage(\n//       monkey.image,\n//       monkey.x,\n//       monkey.y,\n//       monkey.width,\n//       monkey.height\n//     );\n\n//     timeWhenLastUpdate = startTime;\n//     if (frameNumberRunning >= NUMBER_OF_RUNNING_IMAGES) {\n//       frameNumberRunning = 0;\n//     } else {\n//       frameNumberRunning++;\n//     }\n//     //   }\n//   }\n//   if (controller.up && monkey.jumping == false) {\n//     monkey.y_velocity -= 30;\n//     monkey.isIdle = false;\n//     monkey.running = false;\n//     monkey.jumping = true;\n//     monkey.ground = false\n//   }\n\n//   if (controller.left) {\n//     monkey.x_velocity -= 0.5;\n//   }\n\n//   if (controller.right) {\n//     monkey.isIdle = false;\n//     monkey.running = true;\n//     monkey.x_velocity += 0.5;\n//   }\n\n//   monkey.y_velocity += 1.5; // gravity\n//   monkey.x += monkey.x_velocity;\n//   monkey.y += monkey.y_velocity;\n//   monkey.x_velocity *= 0.9; // friction\n//   monkey.y_velocity *= 0.9; // friction\n\n//   if (monkey.y > canvas.height - monkey.height) {\n//     monkey.jumping = false;\n//     monkey.y = canvas.height - monkey.height;\n//     monkey.y_velocity = 0;\n//   }\n\n//   if (!key_state && !monkey.jumping) {\n//     monkey.isIdle = true; //this is probably in the wrong spot\n//     monkey.running = false;\n//   }\n//   // if(key_state){\n//   //     monkey.isIdle = false\n//   // }\n\n//   requestAnimationFrame(step);\n// }\n\n// // window.requestAnimationFrame(loop);\n\n// ///////////////////////////////////////////////tiles and levels////////////////////////////////\n\n// const levelArray = [\n//   \"                    \",\n//   \"                    \",\n//   \"                    \",\n//   \"                    \",\n//   \"                    \",\n//   \"                    \",\n//   \"                    \",\n//   \"                    \",\n//   \"                    \",\n//   \"                    \",\n//   \"                    \",\n//   \"                    \",\n//   \"                    \",\n//   \"               GR   \",\n//   \"                   W\",\n// class Tile {\n//   constructor(width, height) {\n//     this.path = \"./src/img/tiles/\";\n//     this.width = width;\n//     this.height = height;\n//   }\n//   draw(context, tilePath, x, y) {\n//     let image = new Image();\n//     image.src = this.path + tilePath;\n//     context.drawImage(image, x, y, this.width, this.height);\n//   }\n// }\n\n// function rectIntersect(x1, y1, w1, h1, x2, y2, w2, h2){\n//     // Check x and y for overlap\n//     if (x2 > w1 + x1 || x1 > w2 + x2 || y2 > h1 + y1 || y1 > h2 + y2){\n//         return false;\n//     }\n//     return true;\n// };\n\n\n\n// function renderLevel(monkey) {\n  \n//   const grass = \"grass.png\";\n//   const dirt = 'dirt.png'\n//   const woodenBox = 'wooden_box.png'\n//   const platformEdgeRight = 'platform_right.png'\n//   const tile = new Tile(50, 50);\n\n//   let x = 0;\n//   let y = 0;\n\n//   for (let row = 0; row < levelArray.length; row++) {\n//     let tileRow = levelArray[row]\n//    for (let col = 0; col < tileRow.length; col++) {\n//      let singleTile = tileRow[col];\n//      if(singleTile === 'G'){\n//        tile.draw(context,grass,x,y)\n//        if (rectIntersect(x, y, 25, 25, monkey.x, monkey.y, monkey.width, monkey.height)){\n//           monkey.y = y - monkey.height\n//           monkey.jumping = false;\n//           monkey.y_velocity = 0;\n//           // monkey.x = x - 25;\n\n//        }\n//      } else if(singleTile === 'D'){\n//         tile.draw(context, dirt, x, y);\n//       if (rectIntersect(x, y, 25, 25, monkey.x, monkey.y, monkey.width, monkey.height)){\n//           monkey.y = y - monkey.height\n//           monkey.jumping = false;\n//           monkey.y_velocity = 0;\n\n//        } \n//        else if(singleTile === 'B'){\n//          debugger\n//         tile.draw(context, banana, 10, 10);\n//       if (rectIntersect(x, y, 25, 25, monkey.x, monkey.y, monkey.width, monkey.height)){\n//           monkey.y = y - monkey.height\n//           monkey.jumping = false;\n//           monkey.y_velocity = 0;\n\n//        } \n//       }\n//        else if(singleTile === 'R'){\n//         tile.draw(context, platformEdgeRight, x, y);\n//       // if (rectIntersect(x, y, 25, 25, monkey.x, monkey.y, monkey.width, monkey.height)){\n//       //     monkey.y = y - monkey.height\n//       //     monkey.jumping = false;\n//       //     monkey.y_velocity = 0;\n\n//        }\n//      } else if (singleTile === 'W'){\n//        tile.draw(context,woodenBox,x,y)\n//        if (rectIntersect(x, y, 25, 25, monkey.x, monkey.y, monkey.width, monkey.height)){\n//           monkey.y = y - monkey.height\n//           monkey.jumping = false;\n//           monkey.y_velocity = 0;\n\n//        }\n//      }\n//      x += 50\n//    }\n//     y += 40\n//     x = 0\n//   }\n  \n// }\n\n// window.addEventListener(\"keydown\", controller.keyListener);\n// window.addEventListener(\"keyup\", controller.keyListener);\n// window.requestAnimationFrame(step);\n","export function intro_screen(canvas, context) {\n  context.font = \"50px Impact\";\n  context.fillStyle = \"orange\";\n  context.textAlign = \"center\";\n  context.fillText(\"Banana Dash\", canvas.width / 2, canvas.height / 2);\n\n  context.font = \"20px Arial\";\n  context.fillText(\n    \"Press Enter To Start\",\n    canvas.width / 2,\n    canvas.height / 2 + 50\n  );\n}\n"],"sourceRoot":""}